language: python
dist: xenial
python: "3.7"

os:
    - linux
    - osx
matrix:
  include:
    - addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
          env:
            - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
            - LINKER_FLAGS=""
    - addons:
        apt:
            update: true
            sources:
              - ubuntu-toolchain-r-test
              - llvm-toolchain-trusty-6.0
              - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
              packages:
              - clang-6.0
              - libstdc++6
            env:
              - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
              - LINKER_FLAGS="-stdlib=libc++ -lc++abi"

before_install:
- eval "${MATRIX_EVAL}"

# from https://riptutorial.com/cmake/example/4723/configure-travis-ci-with-newest-cmake
# the install step will take care of deploying a newer cmake version
install:    
  # first we create a directory for the CMake binaries
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  # we use wget to fetch the cmake binaries
  - travis_retry wget --no-check-certificate https://cmake.org/files/v3.15/cmake-3.15.0-Linux-x86_64.tar.gz
  # extract the binaries; the output here is quite lengthy,
  # so we swallow it to not clutter up the travis console
  - tar -xvf cmake-3.15.0-Linux-x86_64.tar.gz > /dev/null
  - mv cmake-3.15.0-Linux-x86_64 cmake-install
  # add both the top-level directory and the bin directory from the archive
  # to the system PATH. By adding it to the front of the path we hide the
  # preinstalled CMake with our own.
  - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
  # don't forget to switch back to the main build directory once you are done
  - cd ${TRAVIS_BUILD_DIR}
# Install conan
  - pip install conan
# Automatic detection of your arch, compiler, etc.
  - conan user

script:
  - cmake --version
  - mkdir build
  - cd build
  - conan install ..
  #- conan install boost/1.69.0@conan/stable
  - cmake ..
  - cmake  --build . 